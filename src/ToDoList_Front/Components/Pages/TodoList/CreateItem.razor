@using ToDoList_Front.Clients
@inject ItemsClient ItemsClient
@inject HistoryClient HistoryClient

<div class="add-task">
    <input class="add-task-text" 
           @bind="ItemText"
           @bind:event="oninput"
           @onkeydown="HandleEnter"
           type="text" 
           placeholder="Enter a task..." />
    <button class="add-task-button" @onclick="Create">
        <svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" fill="currentColor" class="bi bi-arrow-right-square-fill" viewBox="0 0 16 16">
            <path d="M0 14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2zm4.5-6.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5a.5.5 0 0 1 0-1"/>
        </svg>
    </button>
</div>

@code {
    private string ItemText { get; set; } = string.Empty;
    
    [Parameter] public EventCallback OnItemAdded { get; set; }

    private async Task Create()
    {
        if (!string.IsNullOrWhiteSpace(ItemText))
        {
            ItemText = string.Empty;
            ItemDto newItem = new ItemDto(ItemText, false, null);
            await ItemsClient.CreateItem(newItem);
            await OnItemAdded.InvokeAsync();
            await HistoryClient.CreateHistory(new HistoryDto(ItemText, $"Task \"{ItemText}\" has been created."));
            ItemText = string.Empty;
        }
    }
    
    private async Task HandleEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Console.WriteLine("Enter pressed");
            await Create();
        }
    }
}