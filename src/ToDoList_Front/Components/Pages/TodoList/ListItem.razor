@using ToDoList_Front.Clients
@inject ItemsClient ItemsClient


    <div class="item">
        <input type="checkbox" checked="@Item.is_completed" @onchange="() => HandleItemInvert(!Item.is_completed, Item)" />
        <input type="text" value="@Item.text" @onchange="@(e => HandleItemUpdate(e.Value?.ToString() ?? string.Empty, Item))" />
        <button @onclick="() => HandleItemDelete(Item)">Delete</button>
    </div>


@code {
    [Parameter] public Item Item { get; set; } = new();

    private async Task HandleItemDelete(Item item)
    {
        await ItemsClient.DeleteItem(item.id);
    }

    private async Task HandleItemUpdate(string newText, Item item)
    {
        ItemDTO itemDto = new ItemDTO(newText, item.is_completed, item.completed_date);
        await ItemsClient.UpdateItem(item.id, itemDto);
    }

    private async Task HandleItemInvert(bool isCompleted, Item item)
    {
        ItemDTO itemDto = new ItemDTO(item.text, isCompleted, isCompleted ? DateTime.Now : null);
        await ItemsClient.UpdateItem(item.id, itemDto);
    }

}